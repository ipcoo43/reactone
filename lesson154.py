'''
오름차순 정렬  
a = [1,10,5,8,7,6,4,3,2,9]
- 선택 정렬 : 가장 작은 것을 선택해서 제일 앞으로 보낸다
 -  처리할 대상 범위에서 최소값을 찾아 
 - 그 값과 범위의 맨 앞에 있는 값을 서로 바꾸는 과정
 - 한 번 끝날 때마다 범위 안의 맨 앞에 있는 값은 정렬이 끝났으므로
 - 정렬 대상 범위에서 제외 한다.
   \ 2 4 5 1 3  시작, 전체 리스트 대상으로 최소값 찾음
   \ 1 4 5 2 3  최소값 1을 대상으로 가장 왼쪽 값인 2와 바꾼다
   1 \ 4 5 2 3  1은 대상에서 제외되고 4,5,2,3에서 최소값 찾음
   1 \ 2 5 4 3  최소값 2를 대상으로 4와 바꾼다
   1 2 \ 5 4 3  2는 대상에서 제외되고 5,4,3에서 최소값 찾음
   1 2 \ 3 4 5  최소값 3을 대사으로 5와 바꾼다
   1 2 3 \ 4 5  최소값 4를 4와 바꾼다 ( 변화 없음)
   1 2 3 4 \ 5  4는 대상에서 제외되고 5만 남는다
   1 2 3 4 5 | 최종 결과
'''

def sel_sort(a):
    n = len(a) # a 리스트 원소의 갯수를 n에 저장하고
    for i in range(0,n-1): # 0부터 n-1까지 원소 i에 대해
        min_idx = i # i를 최소값(min_idx)에 저장하고
        for j in range(i+1, n): # i+1부터 n까지 원소 j에 대해
            if a[j] < a[min_idx]: # a 리스트 j가 a 리스트 min_idx 보다 작으면
                min_idx = j # min_idx에 j를 저장하고
        a[i], a[min_idx] = a[min_idx], a[i] 
        # a 리스트 최소값(min_idx)은 a 리스트 i에 저장하고
        # a 리스트 i는 a 리스트 min_idx에 저장한다
        print(a)
d = [2,4,5,1,3]
sel_sort(d)
