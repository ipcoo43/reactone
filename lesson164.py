# 패토리얼 1부터 n까지 연속한 숫자의 곱을 재귀 호출로 표현
# 1! = 1
# 2! = 2*1 = 2*1!
# 3! = 3*(2*1) = 3*2!
# n! = n*(n-1)!

def fact(n):
    if n <= 1: # n이 1보다 작거나 같으면
        return 1
    return n * fact(n-1)

print(fact(1))
print(fact(2))
print(fact(3))
print(fact(4))
print(fact(5))

# 우선 n이 1이하인지 비교 한다
# 1이하(0 포함)는 아주 작아서 더는 계산하지 않아도 되는 '종료 조건'이다.
# 러시아 인형에서 가장 작은 마지막 인형에 해당
# 이때 1을 결과값으로 돌려 준다( 마지막 인형의 사탕이다)
# n이 1보다 크면 n! = n*(n-1)! 이므로 n*fact(n-1)으리 결과값으로 돌려준다.
# 이 과정에서 n!을 구하기 위해서 약간 더 작은 값인 (n-1)!를 구하는
# fact(n-1)이 재귀 호출된다 ( 인형안에 들어 있는 조금 더 작은 인형에 해당)

# fact(n)을 풀기 위해서 fact(n-1)을 재귀 호출 되나
# 다시 종료 조건에 해당하는지 확인 한다.
# 종료 조건이 아니라면 이번에는 fact(n-2)를 호출 한다.
# fact(n-3), fact(n-4) 반복하다 보면 결국 fact(1)를 만나게 된다
# fact(4) = 4*fact(3) -> fact(3)
# fact(3) = 3*fact(2) -> fact(2)
# fact(2) = 2*fact(1) -> fact(1)
# fact(1)은 종료 조건이므로 fact() 함수를 더 이상 호출하지 않고 1를 돌려 준다.
# fact(2)는 fact(1)에서 돌려받은 결과값 1에 2를 곱해 2를 돌려주고
# fact(3)는 fact(2)에서 돌려받은 결과값 2에 3를 곱해 6를 돌려주고
# fact(4)는 fact(3)에서 돌려받은 결과값 6에 4를 곱해 24를 돌려준다.